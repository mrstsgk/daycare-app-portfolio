/*
 * This file is generated by jOOQ.
 */
package com.example.daycare.infrastructure.jooq


import com.example.daycare.infrastructure.jooq.tables.ClassRoom
import com.example.daycare.infrastructure.jooq.tables.JwtToken
import com.example.daycare.infrastructure.jooq.tables.Password
import com.example.daycare.infrastructure.jooq.tables.Student
import com.example.daycare.infrastructure.jooq.tables.StudentGuardian
import com.example.daycare.infrastructure.jooq.tables.User

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * 保育園のクラス情報を管理するテーブル
     */
    val CLASS_ROOM: ClassRoom get() = ClassRoom.CLASS_ROOM

    /**
     * JWTトークンの管理テーブル
     */
    val JWT_TOKEN: JwtToken get() = JwtToken.JWT_TOKEN

    /**
     * ユーザー（職員・保護者）のパスワード情報を管理するテーブル
     */
    val PASSWORD: Password get() = Password.PASSWORD

    /**
     * 保育園の園児情報を管理するテーブル
     */
    val STUDENT: Student get() = Student.STUDENT

    /**
     * 園児と保護者の関係を管理する中間テーブル
     */
    val STUDENT_GUARDIAN: StudentGuardian get() = StudentGuardian.STUDENT_GUARDIAN

    /**
     * ユーザー（職員・保護者）の基本情報を管理するテーブル
     */
    val USER: User get() = User.USER

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        ClassRoom.CLASS_ROOM,
        JwtToken.JWT_TOKEN,
        Password.PASSWORD,
        Student.STUDENT,
        StudentGuardian.STUDENT_GUARDIAN,
        User.USER
    )
}

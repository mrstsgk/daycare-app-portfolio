openapi: 3.0.3
info:
  title: Daycare Management API
  description: 保育園管理システムのAPI仕様書
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: 開発環境

paths:
  /api/login:
    post:
      summary: ログイン
      description: ログインIDとパスワードで認証し、JWTトークンを返します
      operationId: login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestModel"
      responses:
        "200":
          description: ログイン成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponseModel"
        "401":
          $ref: "error.yaml#/components/responses/UnauthorizedError"
        "423":
          $ref: "error.yaml#/components/responses/AccountLockedError"
        "500":
          $ref: "error.yaml#/components/responses/InternalServerError"

  /api/students:
    get:
      summary: 生徒一覧取得
      description: 全生徒の一覧を取得します
      operationId: getStudents
      tags:
        - Student
      responses:
        "200":
          description: 生徒一覧取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentResponseModel"
        "400":
          $ref: "error.yaml#/components/responses/BadRequestError"
        "500":
          $ref: "error.yaml#/components/responses/InternalServerError"

components:
  schemas:
    LoginRequestModel:
      type: object
      description: ログインリクエスト
      properties:
        loginId:
          type: string
          description: ログインID（ユーザーのコード）- 英数文字のみ入力可能
          minLength: 1
          maxLength: 50
          pattern: '^[A-Za-z0-9]+$'
          example: "sampleUser123"
        password:
          type: string
          format: password
          description: |
            パスワード（10文字以上50文字以下）
            以下の文字種を最低1文字ずつ含む必要があります：
            - 英大文字（A-Z）
            - 英小文字（a-z）
            - 数字（0-9）
            - 記号（!@#$%^&*など）
          minLength: 10
          maxLength: 50
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]$'
          example: "Password123!"
      required:
        - loginId
        - password

    LoginResponseModel:
      type: object
      description: ログインレスポンス
      properties:
        isSuccess:
          type: boolean
          description: ログイン成功フラグ
          example: true
        token:
          type: string
          description: JWTトークン
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        userId:
          type: integer
          format: int64
          description: ユーザーID
          example: 1
        userName:
          type: string
          description: ユーザー名
          example: "田中 太郎"
        userType:
          type: integer
          format: int32
          minimum: 0
          maximum: 1
          description: ユーザータイプ（0：保護者,  1：教員）
          example: 1
      required:
        - isSuccess
        - token
        - userId
        - userName
        - userType

    StudentResponseModel:
      type: object
      description: 生徒レスポンスモデル
      properties:
        id:
          type: integer
          format: int64
          description: 生徒ID
          example: 1
        name:
          type: string
          maxLength: 50
          description: 生徒名
          example: "田中太郎"
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 20
          description: 年齢
          example: 5
        className:
          type: string
          maxLength: 50
          description: クラス名
          example: "ひまわり組"
      required:
        - id
        - name
        - age
        - className
